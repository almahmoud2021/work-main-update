{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\"; // the translations\n\nimport translationEN from \"./locale/en.json\"; // import translationAR from \"./locale/ar.json\"; \n\nimport LanguageDetector from \"i18next-browser-languagedetector\"; // (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  ar: {\n    translation: translationAR\n  }\n};\ni18n.use(LanguageDetector).use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  resources,\n  lng: \"en\",\n  // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n  // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n  // if you're using a language detector, do not define the lng option\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  },\n  react: {\n    useSuspense: false\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["C:/Users/aaalh/OneDrive/Desktop/work-main/work-main/src/i18n.js"],"names":["i18n","initReactI18next","translationEN","LanguageDetector","resources","en","translation","ar","translationAR","use","init","lng","interpolation","escapeValue","react","useSuspense"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,kCAA7B,C,CAGA;AACA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAEJ;AADX,GADY;AAIhBK,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEE;AADX;AAJY,CAAlB;AAUAR,IAAI,CACDS,GADH,CACQN,gBADR,EAEGM,GAFH,CAEOR,gBAFP,EAEyB;AAFzB,CAIGS,IAJH,CAIQ;AACJN,EAAAA,SADI;AAEJO,EAAAA,GAAG,EAAE,IAFD;AAEO;AACX;AACA;AACAC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACM;;AADN,GALX;AAQJC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE;AADV;AARH,CAJR;AAgBE,eAAef,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n// the translations\r\nimport translationEN from \"./locale/en.json\";  \r\n// import translationAR from \"./locale/ar.json\"; \r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\n\r\n// (tip move them in a JSON file and import them,\r\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  ar: {\r\n    translation: translationAR\r\n  },\r\n\r\n\r\n};\r\ni18n\r\n  .use( LanguageDetector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  \r\n  .init({\r\n    resources,\r\n    lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\r\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\r\n    // if you're using a language detector, do not define the lng option\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    },\r\n    react: {\r\n        useSuspense: false\r\n    }\r\n  });\r\n  export default i18n;"]},"metadata":{},"sourceType":"module"}