{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaalh\\\\OneDrive\\\\Desktop\\\\work-main\\\\work-main\\\\src\\\\components\\\\popup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next'; // lan switching package\n\nimport popup from '../../src/popup.jpg'; // gives image path\n\nimport { motion } from 'framer-motion';\nimport translationEN from \"../locale/en.json\"; ///\n\nimport translationAR from \"../locale/ar.json\"; ///\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"2px 0px 0px 24px\",\n    \"& h2\": {\n      fontSize: \"21px\",\n      textTransform: \"none\"\n    },\n    \"& p\": {\n      fontSize: \"21px\"\n    }\n  }\n}));\nconst [dataImg, setDataImg] = useState({}); ///\n\nuseEffect(() => {\n  if (i18n.language === 'en') return;\n  setDataImg(translationAR);\n}, [i18n.language]);\nuseEffect(() => {\n  if (i18n.language === 'ar') return;\n  setDataImg(translationEN);\n}, [i18n.language]);\nexport default function Popup(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [t] = useTranslation(); // lan switching const\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      style: {\n        background: \"white\",\n        color: \"black\",\n        fontSize: \"1.3vw\",\n        fontWeight: 500,\n        textTransform: \"none\"\n      },\n      onClick: handleClickOpen,\n      children: [t('popup.title'), \"      \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      size: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        className: classes.root,\n        children: t('popup.send_request')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(DialogContentText, {\n            style: {\n              fontSize: \"15px\",\n              fontWeight: 500,\n              color: 'black'\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"#8ca945\"\n              },\n              children: t('popup.paragraph')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: props.data ///\n                  ? props.data.map((d, i) =>\n                  /*#__PURE__*/\n                  ///\n                  _jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: [' ', /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: d.working\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 73\n                    }, this)]\n                  }, `${d.id}-${i}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 65\n                  }, this)) : 'loading Image...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              style: {\n                fontWeight: \"bold\",\n                color: \"#8ca945\",\n                fontSize: \"13px\",\n                textTransform: \"none\"\n              },\n              children: t('popup.close')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Popup, \"H52bmL7o2pBpxknHegHKS6OXcaA=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["C:/Users/aaalh/OneDrive/Desktop/work-main/work-main/src/components/popup.jsx"],"names":["React","Button","Dialog","DialogContent","DialogContentText","DialogTitle","makeStyles","Grid","useTranslation","popup","motion","translationEN","translationAR","useStyles","theme","root","padding","fontSize","textTransform","dataImg","setDataImg","useState","useEffect","i18n","language","Popup","props","open","setOpen","classes","handleClickOpen","handleClose","t","background","color","fontWeight","data","map","d","i","working","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useTranslation } from 'react-i18next';     // lan switching package\r\nimport popup from '../../src/popup.jpg'; // gives image path\r\nimport { motion } from 'framer-motion';\r\n\r\nimport translationEN from \"../locale/en.json\"  ///\r\nimport translationAR from \"../locale/ar.json\" ///\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n      padding:\"2px 0px 0px 24px\",\r\n      \"& h2\":{\r\n        fontSize:\"21px\",\r\n        textTransform:\"none\"\r\n      },\r\n      \"& p\":{\r\n        fontSize:\"21px\",\r\n      }\r\n  }\r\n}));\r\n\r\n\r\nconst [dataImg, setDataImg] = useState({}) ///\r\nuseEffect(() => {\r\n  if(i18n.language === 'en')\r\n    return;\r\n      setDataImg(translationAR) \r\n}, [i18n.language])\r\nuseEffect(() => {\r\n  if(i18n.language === 'ar') \r\n    return;\r\n      setDataImg(translationEN) \r\n}, [i18n.language])\r\n\r\n\r\n\r\n\r\nexport default function Popup(props) {\r\n\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const [ t ] = useTranslation();     // lan switching const\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" style={{ background:\"white\",color:\"black\",fontSize:\"1.3vw\",fontWeight:500,textTransform:\"none\" }}\r\n       onClick={handleClickOpen}>\r\n        {t('popup.title')}      {/* /ar-en/ */}\r\n      </Button>\r\n      \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" size=\"large\">\r\n        <DialogTitle id=\"form-dialog-title\" className={classes.root}>{t('popup.send_request')}</DialogTitle>\r\n        <DialogContent>\r\n        <form > {/*  onSubmit={handleSubmit} */}\r\n                  <DialogContentText style={{ fontSize:\"15px\",fontWeight:500 , color:'black'}}>\r\n                    {/* To  */} <span style={{ fontWeight:\"bold\",color:\"#8ca945\" }}>{t('popup.paragraph')}</span>\r\n                    </DialogContentText>\r\n             \r\n                          <Grid container spacing={1}>\r\n                          <div>\r\n\r\n                                 {/* <div>\r\n                                    <img src={popup} alt=\"Loading...\" />\r\n                                </div>  */}\r\n                                             <div>\r\n                                                <div className='row'>\r\n                                                        {props.data ///\r\n                                                            ? props.data.map((d, i) => ( ///\r\n\r\n                                                                <div  key={`${d.id}-${i}`} className='col-md-4'>\r\n                                                                    {' '}\r\n\r\n                                                                    {/* <i className={d.img}></i> */}\r\n                                                                        <h3>{d.working}</h3>\r\n                                                                </div>\r\n                                                            ))\r\n                                                            : 'loading Image...'}\r\n                                                </div>\r\n                                            </div> \r\n                            </div>\r\n                         </Grid>\r\n   \r\n        {/* <DialogActions> */}\r\n          {/* <Button onClick={handleClose} style={{ fontWeight:\"bold\",fontSize:\"13px\",textTransform:\"none\" }}>\r\n            Cancel\r\n          </Button> */}\r\n         <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n          <Button type='submit' style={{ fontWeight:\"bold\",color:\"#8ca945\",fontSize:\"13px\",textTransform:\"none\" }}>\r\n            {t('popup.close')}\r\n          </Button>\r\n          </Grid>\r\n          </form>\r\n          </DialogContent>\r\n        {/* </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n    \r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}