{"ast":null,"code":"// import React from 'react';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import { makeStyles } from '@material-ui/core';\n// import Grid from '@material-ui/core/Grid';\n// import { useTranslation } from 'react-i18next';     // lan switching package\n// // import popup from '../../src/popup.jpg'; // gives image path\n// // import { motion } from 'framer-motion';\n// import { useState, useEffect } from 'react';\n// import translationEN from \"../locale/en.json\"  ///\n// import translationAR from \"../locale/ar.json\" ///\n// const useStyles = makeStyles((theme) => ({\n//     root:{\n//       padding:\"2px 0px 0px 24px\",\n//       \"& h2\":{\n//         fontSize:\"21px\",\n//         textTransform:\"none\"\n//       },\n//       \"& p\":{\n//         fontSize:\"21px\",\n//       }\n//   }\n// }));\n// export default function ุค(props) {\n//   const [open, setOpen] = React.useState(false);\n//   const classes = useStyles();\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n//   const [ t, i18n ] = useTranslation();     // lan switching const\n//   const [dataImg, setDataImg] = useState({}) ///\n//   useEffect(() => {\n//     if(i18n.language === 'en')\n//       return;\n//         setDataImg(translationAR) \n//   }, [i18n.language])\n//   useEffect(() => {\n//     if(i18n.language === 'ar') \n//       return;\n//         setDataImg(translationEN) \n//   }, [i18n.language])\n//   return (\n//     <div>\n//       <Button variant=\"contained\" style={{ background:\"white\",color:\"black\",fontSize:\"1.3vw\",fontWeight:500,textTransform:\"none\" }}\n//        onClick={handleClickOpen}>\n//         {t('popup.title')}    \n//       </Button>\n//       <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" size=\"large\">\n//         <DialogTitle id=\"form-dialog-title\" className={classes.root}>{t('popup.send_request')}</DialogTitle>\n//         <DialogContent>\n//         <form > \n//                   <DialogContentText style={{ fontSize:\"15px\",fontWeight:500 , color:'black'}}>\n//                     {/* To  */} <span style={{ fontWeight:\"bold\",color:\"#8ca945\" }}>{t('popup.paragraph')}</span>\n//                     </DialogContentText>\n//                           <Grid container spacing={1}>\n//                             <div>\n//                                    {/* <div>\n//                                     <img src={popup} alt=\"Loading...\" />\n//                                     </div>  */}\n//                                              {/* <div>\n//                                                  <div className='row'>\n//                                                         {props.data ///\n//                                                             ? props.dataImg.Service.map((d, i) => ( ///\n//                                                                 <div  key={`${d.id}-${i}`} className='col-md-4'>\n//                                                                     {' '}\n//                                                                      <i className={d.name}></i> \n//                                                                         <h3>{d.img}</h3> \n//                                                                 </div>\n//                                                             ))\n//                                                             : 'loading Image...'}\n//                                                 </div> \n//                                             </div>   */}\n//                             </div>\n//                          </Grid>\n//         {/* <DialogActions> */}\n//           {/* <Button onClick={handleClose} style={{ fontWeight:\"bold\",fontSize:\"13px\",textTransform:\"none\" }}>\n//             Cancel\n//           </Button> */}\n//          <Grid\n//             container\n//             direction=\"row\"\n//             justifyContent=\"flex-end\"\n//             alignItems=\"center\"\n//           >\n//           <Button type='submit' style={{ fontWeight:\"bold\",color:\"#8ca945\",fontSize:\"13px\",textTransform:\"none\" }}>\n//             {t('popup.close')}\n//           </Button>\n//           </Grid>\n//           </form>\n//           </DialogContent>\n//         {/* </DialogActions> */}\n//       </Dialog>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["C:/work-main/work-main/src/components/popup.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAIA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import React from 'react';\r\n// import Button from '@material-ui/core/Button';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n// import { makeStyles } from '@material-ui/core';\r\n// import Grid from '@material-ui/core/Grid';\r\n\r\n// import { useTranslation } from 'react-i18next';     // lan switching package\r\n// // import popup from '../../src/popup.jpg'; // gives image path\r\n// // import { motion } from 'framer-motion';\r\n// import { useState, useEffect } from 'react';\r\n// import translationEN from \"../locale/en.json\"  ///\r\n// import translationAR from \"../locale/ar.json\" ///\r\n\r\n\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root:{\r\n//       padding:\"2px 0px 0px 24px\",\r\n//       \"& h2\":{\r\n//         fontSize:\"21px\",\r\n//         textTransform:\"none\"\r\n//       },\r\n//       \"& p\":{\r\n//         fontSize:\"21px\",\r\n//       }\r\n//   }\r\n// }));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default function ุค(props) {\r\n\r\n\r\n\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const classes = useStyles();\r\n\r\n\r\n//   const handleClickOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n\r\n//   const [ t, i18n ] = useTranslation();     // lan switching const\r\n\r\n  \r\n//   const [dataImg, setDataImg] = useState({}) ///\r\n//   useEffect(() => {\r\n//     if(i18n.language === 'en')\r\n//       return;\r\n//         setDataImg(translationAR) \r\n//   }, [i18n.language])\r\n//   useEffect(() => {\r\n//     if(i18n.language === 'ar') \r\n//       return;\r\n//         setDataImg(translationEN) \r\n//   }, [i18n.language])\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <Button variant=\"contained\" style={{ background:\"white\",color:\"black\",fontSize:\"1.3vw\",fontWeight:500,textTransform:\"none\" }}\r\n//        onClick={handleClickOpen}>\r\n//         {t('popup.title')}    \r\n//       </Button>\r\n      \r\n//       <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" size=\"large\">\r\n          \r\n//         <DialogTitle id=\"form-dialog-title\" className={classes.root}>{t('popup.send_request')}</DialogTitle>\r\n        \r\n//         <DialogContent>\r\n//         <form > \r\n//                   <DialogContentText style={{ fontSize:\"15px\",fontWeight:500 , color:'black'}}>\r\n//                     {/* To  */} <span style={{ fontWeight:\"bold\",color:\"#8ca945\" }}>{t('popup.paragraph')}</span>\r\n//                     </DialogContentText>\r\n             \r\n//                           <Grid container spacing={1}>\r\n//                             <div>\r\n\r\n//                                    {/* <div>\r\n//                                     <img src={popup} alt=\"Loading...\" />\r\n//                                     </div>  */}\r\n//                                              {/* <div>\r\n//                                                  <div className='row'>\r\n//                                                         {props.data ///\r\n//                                                             ? props.dataImg.Service.map((d, i) => ( ///\r\n\r\n//                                                                 <div  key={`${d.id}-${i}`} className='col-md-4'>\r\n//                                                                     {' '}\r\n//                                                                      <i className={d.name}></i> \r\n//                                                                         <h3>{d.img}</h3> \r\n//                                                                 </div>\r\n//                                                             ))\r\n//                                                             : 'loading Image...'}\r\n//                                                 </div> \r\n//                                             </div>   */}\r\n//                             </div>\r\n//                          </Grid>\r\n   \r\n//         {/* <DialogActions> */}\r\n//           {/* <Button onClick={handleClose} style={{ fontWeight:\"bold\",fontSize:\"13px\",textTransform:\"none\" }}>\r\n//             Cancel\r\n//           </Button> */}\r\n//          <Grid\r\n//             container\r\n//             direction=\"row\"\r\n//             justifyContent=\"flex-end\"\r\n//             alignItems=\"center\"\r\n//           >\r\n//           <Button type='submit' style={{ fontWeight:\"bold\",color:\"#8ca945\",fontSize:\"13px\",textTransform:\"none\" }}>\r\n//             {t('popup.close')}\r\n//           </Button>\r\n//           </Grid>\r\n//           </form>\r\n//           </DialogContent>\r\n//         {/* </DialogActions> */}\r\n//       </Dialog>\r\n//     </div>\r\n    \r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}